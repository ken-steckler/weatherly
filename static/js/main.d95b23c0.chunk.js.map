{"version":3,"sources":["img/sunny.png","components/weather.js","App.js","index.js"],"names":["refresh","window","location","reload","WeatherCard","weatherData","className","name","Button","inverted","color","circular","icon","onClick","moment","format","src","sunny","alt","weather","main","Math","round","temp","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","api","App","useState","lat","setLat","long","setLong","data","setData","query","setQuery","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","then","res","json","result","fetchData","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","console","log","Dimmer","active","Loader","ReactDOM","render","document","getElementById"],"mappings":"8OAAe,MAA0B,kC,OCMnCA,EAAU,WACdC,OAAOC,SAASC,UAiDHC,EA9CK,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OAClB,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,mBAAGA,UAAU,SAAb,SAAuBD,EAAYE,OACnC,cAACC,EAAA,EAAD,CACEF,UAAU,SACVG,UAAQ,EACRC,MAAM,OACNC,UAAQ,EACRC,KAAK,UACLC,QAASb,OAGb,qBAAKM,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,oBAAGA,UAAU,MAAb,UACGQ,MAASC,OAAO,QADnB,KAC6B,+BAAOD,MAASC,OAAO,QAClD,uBACA,qBAAKT,UAAU,QAAQU,IAAKC,EAAOC,IAAI,aAEzC,mBAAGZ,UAAU,cAAb,SAA4BD,EAAYc,QAAQ,GAAGC,YAIvD,qBAAKd,UAAU,YAEf,sBAAKA,UAAU,OAAf,UACE,oBAAGA,UAAU,OAAb,yBACee,KAAKC,MAAMjB,EAAYe,KAAKG,MAD3C,YAGA,oBAAGjB,UAAU,OAAb,uBAA+BD,EAAYe,KAAKI,SAAhD,WAGF,sBAAKlB,UAAU,OAAf,UACE,oBAAGA,UAAU,iBAAb,qBACW,IACR,IAAImB,KAA+B,IAA1BpB,EAAYqB,IAAIC,SAAgBC,mBAAmB,YAE/D,oBAAGtB,UAAU,iBAAb,oBACU,IACP,IAAImB,KAA8B,IAAzBpB,EAAYqB,IAAIG,QAAeD,mBAAmB,mB,2BC7C9DE,EACC,mCADDA,EAEE,2CAGO,SAASC,IAAO,IAAD,EACNC,mBAAS,IADH,mBACrBC,EADqB,KAChBC,EADgB,OAEJF,mBAAS,IAFL,mBAErBG,EAFqB,KAEfC,EAFe,OAGJJ,mBAAS,IAHL,mBAGrBK,EAHqB,KAGfC,EAHe,OAIFN,mBAAS,IAJP,mBAIrBO,EAJqB,KAIdC,EAJc,KAM5BC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,6DAChBC,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDZ,EAAOY,EAASC,OAAOC,UACvBZ,EAAQU,EAASC,OAAOE,cAHV,SAMVC,MAAM,GAAD,OACNC,0CADM,yBACwClB,EADxC,gBACmDE,EADnD,iCACgFgB,qCAExFC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLjB,EAAQiB,MAXI,2CAAH,qDAefC,KACC,CAACvB,EAAKE,IAeT,OACE,qBAAK7B,UAAU,MAAf,SACE,iCACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBACEmD,KAAK,OACLnD,UAAU,YACVoD,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOpB,EAASoB,EAAEC,OAAOC,QACnCA,MAAOvB,EACPwB,WAxBG,SAACC,GACE,UAAZA,EAAIC,KACNf,MAAM,GAAD,OAAIpB,EAAJ,qBAAyBS,EAAzB,iCAAuDT,IACzDsB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLf,EAAS,IACTF,EAAQiB,GAERW,QAAQC,IAAIZ,aAoBO,oBAAblB,EAAKjB,KACX,cAAC,EAAD,CAASf,YAAagC,IAEtB,8BACE,cAAC+B,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,iCC9DdC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d95b23c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sunny.2269e70e.png\";","import React from \"react\";\nimport \"./styles.css\";\nimport moment from \"moment\";\nimport { Button } from \"semantic-ui-react\";\nimport sunny from \"../img/sunny.png\";\n\nconst refresh = () => {\n  window.location.reload();\n};\n\nconst WeatherCard = ({ weatherData }) => (\n  <div className=\"main\">\n    <div className=\"top\">\n      <p className=\"header\">{weatherData.name}</p>\n      <Button\n        className=\"button\"\n        inverted\n        color=\"blue\"\n        circular\n        icon=\"refresh\"\n        onClick={refresh}\n      />\n    </div>\n    <div className=\"flex\">\n      <div className=\"center\">\n        <p className=\"day\">\n          {moment().format(\"dddd\")}, <span>{moment().format(\"LL\")}</span>\n          <br />\n          <img className=\"clear\" src={sunny} alt=\"clear\" />\n        </p>\n        <p className=\"description\">{weatherData.weather[0].main}</p>\n      </div>\n    </div>\n\n    <div className=\"divider\"></div>\n\n    <div className=\"flex\">\n      <p className=\"temp\">\n        Temprature: {Math.round(weatherData.main.temp)} &deg;F\n      </p>\n      <p className=\"temp\">Humidity: {weatherData.main.humidity} %</p>\n    </div>\n\n    <div className=\"flex\">\n      <p className=\"sunrise-sunset\">\n        Sunrise:{\" \"}\n        {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")}\n      </p>\n      <p className=\"sunrise-sunset\">\n        Sunset:{\" \"}\n        {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")}\n      </p>\n    </div>\n  </div>\n);\n\nexport default WeatherCard;\n","import React, { useEffect, useState } from \"react\";\nimport Weather from \"./components/weather\";\nimport \"./App.css\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nconst api = {\n  key: \"ad58305515ce81da0e1c23a16629b3ab\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nexport default function App() {\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n\n      await fetch(\n        `${process.env.REACT_APP_API_URL}/weather/?lat=${lat}&lon=${long}&units=imperial&APPID=${process.env.REACT_APP_API_KEY}`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          setData(result);\n        });\n    };\n\n    fetchData();\n  }, [lat, long]);\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setData(result);\n\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"Wrapper\">\n          <div className=\"searchbox\">\n            <input\n              type=\"text\"\n              className=\"searchbar\"\n              placeholder=\"Search...\"\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n        </div>\n        {typeof data.main != \"undefined\" ? (\n          <Weather weatherData={data} />\n        ) : (\n          <div>\n            <Dimmer active>\n              <Loader>Loading..</Loader>\n            </Dimmer>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}